#ifndef __FrameMain__
#define __FrameMain__

/**
 @file
 Subclass of BaseFrameMain, which is generated by wxFormBuilder.
 */

#include "GUI.h"
#include "GLGridPlane.h"
#include "GLAxis.h"
#include <sstream>

#include "Geometry/SimpleMesh.h"
#include "Geometry/HalfEdgeMesh.h"

#include "Util/ObjIO.h"
#include "Util/ColorMapFactory.h"
#include "Util/GLObjectPlayback.h"

#include <fstream>
#include <list>
#include <map>
#include <typeinfo>

/** Implementing BaseFrameMain */
class FrameMain : public BaseFrameMain
{
public:
  /** Constructor */
  FrameMain( wxWindow* parent );

protected :

  class VisualizationModeData : public wxClientData {
    public :
    VisualizationModeData(const GLObject::VisualizationMode & VisualizationMode)
      : mVisualizationMode(VisualizationMode) { }

    const GLObject::VisualizationMode & GetVisualizationMode() { return mVisualizationMode; }

    protected :
      GLObject::VisualizationMode mVisualizationMode;
  };

  std::map<const char *, std::list<wxWindow *> > mPanelSwitches;
  std::map<std::string, std::list<std::string> > mDependentObjects;

  void SaveSelected( wxCommandEvent& event );
  void AddUniqueObject(GLObject * object);
  void RemoveObject(GLObject * object);
  void UpdateDependentObjects(GLObject * object);
  void DeleteDependentObjects(GLObject * object);

  void AddObjectSimpleMesh( wxCommandEvent& event );
  void AddObjectHalfEdgeMesh( wxCommandEvent& event );

  void DeleteObjects( wxCommandEvent& event );
  void SelectObjects( wxCommandEvent& event );
  void MoveObjectsUp( wxCommandEvent& event );
  void MoveObjecsDown( wxCommandEvent& event );
  void TextCtrlFocus( wxFocusEvent& event );
  void TransformObjects(wxCommandEvent& event);
  void VisualizeWireframe( wxCommandEvent& event );
  void VisualizeMeshNormals( wxCommandEvent& event );
  void OpacityChanged( wxScrollEvent& event );
  void SetColormap( wxCommandEvent& event );
  void SetVisualizationMode( wxCommandEvent& event );
  void ScaleChanged( wxCommandEvent& event );
  void ToggleUniformScaling( wxCommandEvent& event );
  void ToggleAutoMinMax( wxCommandEvent& event );
  void ObjectSelected(wxCommandEvent & event);
  void CaptureScreen( wxCommandEvent& event );

  // Window close in MSW_XP (both VS2005/2008) is not working without this
#ifdef WIN32
  virtual void OnClose( wxCloseEvent& event )
  { if( event.CanVeto() ) wxWindow::Destroy(); }
#endif

  void HideAllPanels();
  void UpdatePanels();

  template <class MeshType>
  MeshType * AddMesh(const wxString & path);
};


template <class MeshType>
MeshType * FrameMain::AddMesh(const wxString & path)
{
  wxString filename = path.AfterLast('/');
  if (filename == path) // If we're on Windows
    filename = path.AfterLast('\\');
  wxString suffix = path.AfterLast('.');

  if (suffix == _T("obj")) {
    // Create new mesh
    MeshType * mesh = new MeshType();
    mesh->SetName(std::string(filename.mb_str()));

    // Load mesh and add to geometry list
    std::ifstream infile;
    ObjIO objIO;
    infile.open(path.mb_str());
    objIO.Load(mesh, infile);
    mesh->Initialize();

    // Add mesh to scene
    AddUniqueObject(mesh);

    return mesh;
  }
  else
    std::cerr << "Error: File type not supported" << std::endl;

  return NULL;
}


#endif // __FrameMain__
